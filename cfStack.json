{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CloudFormation template to create a Lambda function with API Gateway v2 (HTTP API) to return an HTTP cookie",
  "Parameters" : {
      "S3bucketName" : { "Type" : "String" },
      "DeployName" : { "Type" : "String" },
      "CertificateArn" : { "Type" : "String" },
      "HostedZoneId" : { "Type" : "String" },
      "DomainName" : { "Type" : "String" }
  },
  "Resources": {
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LambdaExecutionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "Function": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {"Fn::Sub" : "${DeployName}"},
        "Handler": {"Fn::Sub" : "${DeployName}.lambda_handler" },
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "python3.12",
        "Code": {
          "S3Bucket": {"Fn::Sub" : "${S3bucketName}" },
          "S3Key": {"Fn::Sub" : "${DeployName}.zip" }
        }
      }
    },
    "ApiGatewayHttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": {"Fn::Sub" : "${DeployName}-HttpApi" },
        "ProtocolType": "HTTP"
      }
    },
    "CustomDomainName": {
      "Type": "AWS::ApiGatewayV2::DomainName",
      "Properties": {
        "DomainName": { "Ref": "DomainName" },
        "DomainNameConfigurations": [
          {
            "CertificateArn": { "Ref": "CertificateArn" },
            "EndpointType": "REGIONAL"
          }
        ]
      }
    },
    "ApiMapping": {
      "Type": "AWS::ApiGatewayV2::ApiMapping",
      "Properties": {
        "ApiId": { "Ref": "ApiGatewayHttpApi" },
        "DomainName": { "Ref": "CustomDomainName" },
        "Stage": { "Ref": "ApiGatewayStage" }
      }
    },
    "ApiGatewayIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGatewayHttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations",
            {
              "Region": {
                "Ref": "AWS::Region"
              },
              "LambdaArn": {
                "Fn::GetAtt": [
                  "Function",
                  "Arn"
                ]
              }
            }
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "ApiGatewayRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGatewayHttpApi"
        },
        "RouteKey": "GET /",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "ApiGatewayIntegration"
              }
            ]
          ]
        }
      }
    },
    "ApiGatewayStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGatewayHttpApi"
        },
        "StageName": "prod",
        "AutoDeploy": true
      }
    },
    "MyRecordSet": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneId": { "Ref": "HostedZoneId" },
        "Name": { "Ref": "DomainName" },
        "Type": "A",
        "AliasTarget": {
          "HostedZoneId": {
            "Fn::GetAtt": [
              "CustomDomainName",
              "HostedZoneId"
            ]
          },
          "DNSName": {
            "Fn::GetAtt": [
              "CustomDomainName",
              "DistributionDomainName"
            ]
          }
        }
      }
    },
    "LambdaInvokePermission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "FunctionName": {
            "Fn::GetAtt": [
              "Function",
              "Arn"
            ]
          },
          "Principal": "apigateway.amazonaws.com",
          "SourceArn": {
            "Fn::Sub": [
              "arn:aws:execute-api:${Region}:${AccountId}:${ApiId}/*/GET/",
              {
                "Region": { "Ref": "AWS::Region" },
                "AccountId": { "Ref": "AWS::AccountId" },
                "ApiId": { "Ref": "ApiGatewayHttpApi" }
              }
            ]
          }
        }
      }
  },
  "Outputs": {
    "ApiUrl": {
      "Description": "URL of the API Gateway HTTP endpoint",
      "Value": {
        "Fn::Sub": "https://${ApiGatewayHttpApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"
      }
    },
    "CustomDomainUrl": {
      "Description": "URL of the custom domain for the API Gateway endpoint",
      "Value": {
        "Fn::Sub": "https://${DomainName}/"
      }
    }
  }
}
