{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CloudFormation template to create a Lambda function with API Gateway v2 (HTTP API) to return an HTTP cookie",
  "Parameters" : {
      "S3bucketName" : { "Type" : "String" },
      "DnsName" : { "Type" : "String" },
      "CustomSubdomanName" : { "Type" : "String" },
      "DeployName" : { "Type" : "String" }
  },
  "Resources": {
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LambdaExecutionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },

    "PiExamFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "${DeployName}",
        "Tags": [
          {
            "Key": "Owner",
            "Value": "${DeployName}"
          }
        ],
        "Runtime": "python3.12",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "ZipFile": "s3://${S3bucketName}/pi-exam.zip"
        }
      }
    },

    "Api": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "${DeployName}",
        "ProtocolType": "HTTP",
        "Target": {
          "Fn::GetAtt": [
            "PiExamFunction",
            "Arn"
          ]
        }
      }
    },
    "Integration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "PiExam-Api"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "PiExamFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "1.0"
      }
    },
    "CustomDomainCertificate": {
      "Type": "AWS::ACM::Certificate",
      "Properties": {
        "DomainName": {"Fn::Sub" : "pi-exam.${DnsName}"}
      }
    },
    "CustomDomain": {
      "Type": "AWS::ApiGatewayV2::DomainName",
      "Properties": {
        "DomainName": {"Fn::Sub" : "${DeployName}.${DnsName}."},
        "DomainNameConfigurations": [
          {
            "CertificateArn": {
              "Ref": "CustomDomainCertificate"
            },
            "EndpointType": "REGIONAL"
          }
        ]
      }
    },
    "ApiMapping": {
      "Type": "AWS::ApiGatewayV2::ApiMapping",
      "Properties": {
        "ApiId": {
          "Fn::ImportValue" : {"Fn::Sub" : "${DeployName}-Api"} }
        },
        "DomainName": {
          "Ref": "CustomDomain"
        },
        "Stage": "$default"
      }
    },
    "Route53Record": {
      "Type": "AWS::Route53::RecordSetGroup",
      "Properties": {
        "HostedZoneId": "ZRWFREAU725TM",
        "RecordSets": [
          {
            "Name": {"Fn::ImportValue" : {"Fn::Sub" : "${DeployName}.${DnsName}."}},
            "Type": "A",
            "AliasTarget": {
              "HostedZoneId": {
                "Fn::GetAtt": [
                  "CustomDomain",
                  "HostedZoneId"
                ]
              },
              "DNSName": {
                "Fn::GetAtt": [
                  "CustomDomain",
                  "ApiGatewayDomainName"
                ]
              },
              "EvaluateTargetHealth": false
            }
          }
        ]
      }
    }
  }
----------------------------


    "ApiGatewayHttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "SetCookieHttpApi",
        "ProtocolType": "HTTP"
      }
    },
    "ApiGatewayIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGatewayHttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations",
            {
              "Region": {
                "Ref": "AWS::Region"
              },
              "LambdaArn": {
                "Fn::GetAtt": [
                  "SetCookieFunction",
                  "Arn"
                ]
              }
            }
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "ApiGatewayRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGatewayHttpApi"
        },
        "RouteKey": "GET /set-cookie",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "ApiGatewayIntegration"
              }
            ]
          ]
        }
      }
    },
    "ApiGatewayStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGatewayHttpApi"
        },
        "StageName": "prod",
        "AutoDeploy": true
      }
    },
    "LambdaInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SetCookieFunction",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${Region}:${AccountId}:${ApiId}/*/GET/set-cookie",
            {
              "Region": {
                "Ref": "AWS::Region"
              },
              "AccountId": {
                "Ref": "AWS::AccountId"
              },
              "ApiId": {
                "Ref": "ApiGatewayHttpApi"
              }
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "ApiUrl": {
      "Description": "URL of the API Gateway HTTP endpoint",
      "Value": {
        "Fn::Sub": "https://${ApiGatewayHttpApi}.execute-api.${AWS::Region}.amazonaws.com/prod/set-cookie"
      }
    }
  }
}
