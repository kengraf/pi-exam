{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CloudFormation template to create a Lambda function with API Gateway v2 (HTTP API) to return an HTTP cookie",
  "Parameters" : {
      "S3bucketName" : { "Type" : "String" },
      "DnsName" : { "Type" : "String" },
      "DeployName" : { "Type" : "String" },
      "CustomSubdomainName" : { "Type" : "String" }
  },
  "Resources": {
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LambdaExecutionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "SetCookieFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "SetCookieFunction",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "python3.9",
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              [
                "import json",
                "",
                "def lambda_handler(event, context):",
                "    cookie_value = 'my_cookie_value'",
                "    cookie_name = 'my_cookie'",
                "    max_age = 3600  # 1 hour in seconds",
                "    path = '/'",
                "    secure = True",
                "    http_only = True",
                "",
                "    set_cookie_header = f\"{cookie_name}={cookie_value}; Max-Age={max_age}; Path={path};\"",
                "    if secure:",
                "        set_cookie_header += ' Secure;'",
                "    if http_only:",
                "        set_cookie_header += ' HttpOnly;'",
                "",
                "    response = {",
                "        'statusCode': 200,",
                "        'headers': {",
                "            'Set-Cookie': set_cookie_header,",
                "            'Content-Type': 'application/json'",
                "        },",
                "        'body': json.dumps({'message': 'Cookie has been set!'})",
                "    }",
                "",
                "    return response"
              ]
            ]
          }
        }
      }
    },
    "ApiGatewayHttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "SetCookieHttpApi",
        "ProtocolType": "HTTP"
      }
    },
    "ApiGatewayIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGatewayHttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations",
            {
              "Region": {
                "Ref": "AWS::Region"
              },
              "LambdaArn": {
                "Fn::GetAtt": [
                  "SetCookieFunction",
                  "Arn"
                ]
              }
            }
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "ApiGatewayRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGatewayHttpApi"
        },
        "RouteKey": "GET /set-cookie",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "ApiGatewayIntegration"
              }
            ]
          ]
        }
      }
    },
    "ApiGatewayStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGatewayHttpApi"
        },
        "StageName": "prod",
        "AutoDeploy": true
      }
    },
    "LambdaInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SetCookieFunction",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${Region}:${AccountId}:${ApiId}/*/GET/set-cookie",
            {
              "Region": {
                "Ref": "AWS::Region"
              },
              "AccountId": {
                "Ref": "AWS::AccountId"
              },
              "ApiId": {
                "Ref": "ApiGatewayHttpApi"
              }
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "ApiUrl": {
      "Description": "URL of the API Gateway HTTP endpoint",
      "Value": {
        "Fn::Sub": "https://${ApiGatewayHttpApi}.execute-api.${AWS::Region}.amazonaws.com/prod/set-cookie"
      }
    }
  }
}
